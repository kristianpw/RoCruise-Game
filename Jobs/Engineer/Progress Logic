local active = script.Parent.Active
local progress = script.Parent.Progress
local progress2 = script.Parent.Progress2
local a = script.Parent.A
local b = script.Parent.B
local c = script.Parent.C
local d = script.Parent.D
local startdisplay = script.Parent.startdisplay
local enddisplay = script.Parent.enddisplay
local checkpoint = script.Parent.checkpoint

local progresslights = {
	script.Parent.progress1,
	script.Parent.progress2,
	script.Parent.progress2
}

local display1 = {
	script.Parent.digit1a,
	script.Parent.digit2a,
	script.Parent.digit3a,
	script.Parent.digit4a
}

local display2 = {
	script.Parent.digit1b,
	script.Parent.digit2b,
	script.Parent.digit3b,
	script.Parent.digit4b
}

local colordisplays = {
	script.Parent.A,
	script.Parent.B,
	script.Parent.C,
	script.Parent.D
}

local colors = {
	{name = "Black", color = Color3.fromRGB(27, 42, 53)},
	{name = "Bright red", color = Color3.fromRGB(196, 40, 28)},
	{name = "Medium stone grey", color = Color3.fromRGB(163, 162, 165)}
}

local rng

local function sequence()
	
	--checks when button pressed if its in the correct position(progress) and the job isn't finished yet(progress2)
	if active.Value == 1 and progress.Value == 0 and progress2.Value < 3 and checkpoint.Value == 0 then
		rng = math.random(4,6)/10
		task.wait(2)
		startdisplay.Color = Color3.fromRGB(196, 40, 28)
		task.wait(rng)
		progress.Value = progress.Value + 1
		sequence()
	elseif active.Value == 1 and progress.Value == 1 and progress2.Value < 3 and checkpoint.Value == 0 then
		startdisplay.Color = Color3.fromRGB(27, 42, 53)
		a.Color = Color3.fromRGB(196, 40, 28)
		task.wait(rng)
		progress.Value = progress.Value + 1
		sequence()
	elseif active.Value == 1 and progress.Value == 2 and progress2.Value < 3 and checkpoint.Value == 0 then
		a.Color = Color3.fromRGB(27, 42, 53)
		b.Color = Color3.fromRGB(196, 40, 28)
		task.wait(rng)
		progress.Value = progress.Value + 1
		sequence()
	elseif active.Value == 1 and progress.Value == 3 and progress2.Value < 3 and checkpoint.Value == 0 then
		b.Color = Color3.fromRGB(27, 42, 53)
		c.Color = Color3.fromRGB(196, 40, 28)
		task.wait(rng)
		progress.Value = progress.Value + 1
		sequence()
	elseif active.Value == 1 and progress.Value == 4 and progress2.Value < 3 and checkpoint.Value == 0 then	
		c.Color = Color3.fromRGB(27, 42, 53)
		d.Color = Color3.fromRGB(196, 40, 28)
		task.wait(rng)
		progress.Value = progress.Value + 1
		sequence()
	elseif active.Value == 1 and progress.Value == 5 and progress2.Value < 3 and checkpoint.Value == 0 then
		d.Color = Color3.fromRGB(27, 42, 53)
		enddisplay.Color = Color3.fromRGB(196, 40, 28)
		task.wait(rng)
		progress.Value = 0
		active.Value = 0
		--sequence()
	elseif active.Value == 1  and progress2.Value < 3 and checkpoint.Value == 1 then
		checkpoint.Value = 0
		progress.Value = 0
		startdisplay.Color = Color3.fromRGB(27, 42, 53)
		enddisplay.Color = Color3.fromRGB(27, 42, 53)
		for i = 1, #colordisplays do
			colordisplays[i].Color = colors[1].color
		end
		sequence()
	elseif active.Value == 0  and progress2.Value < 3 and checkpoint.Value == 0 then --failed checkpoint
		checkpoint.Value = 0
		progress2.Value = 0
		
		for i = 1, #progresslights do
			progresslights[i].Color = colors[3].color
		end
		
		startdisplay.Color = Color3.fromRGB(27, 42, 53)
		enddisplay.Color = Color3.fromRGB(27, 42, 53)
		for i = 1, #colordisplays do
			colordisplays[i].Color = colors[1].color
		end
		for i = 1, #display1 do
			display1[i].Color = colors[1].color
		end
		for i = 1, #display2 do
			display2[i].Color = colors[1].color
		end
	elseif active.Value == 0 and progress2.Value == 3 then --job completed
		progress.Value = 0
		progress2.Value = 0
		startdisplay.Color = Color3.fromRGB(27, 42, 53)
		enddisplay.Color = Color3.fromRGB(27, 42, 53)
		for i = 1, #colordisplays do
			colordisplays[i].Color = colors[1].color
		end
		for i = 1, #display1 do
			display1[i].Color = colors[1].color
		end
		for i = 1, #display2 do
			display2[i].Color = colors[1].color
		end
		return
	end
end

active.Changed:Connect(sequence)
